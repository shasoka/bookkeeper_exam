import asyncio
import random
from typing import Callable, Any, Awaitable

from aiogram import BaseMiddleware, html
from aiogram.types import TelegramObject

from resources.strings import SUCCESS_EFFECT_IDS
from services.entities_service import get_user, changelog_seen


class ChangeLogMiddleware(BaseMiddleware):
    # noinspection PyTypeChecker
    async def __call__(
        self,
        handler: Callable[[TelegramObject, dict[str, Any]], Awaitable[Any]],
        event: TelegramObject,
        data: dict[str, Any],
    ) -> Any:

        if event.from_user:
            user = await get_user(str(event.from_user.id))
            if not user.checked_update:
                await event.answer(
                    f"""
                    {html.code('[UPDATE CHANGELOG 19.06.2024]')}
                    \nüõ† 1. –ú–µ–Ω—è –ø–æ–¥–ª–∞—Ç–∞–ª–∏ {html.italic(html.strikethrough('—Å–Ω–æ–≤–∞'))} –∏ –∏—Å–ø—Ä–∞–≤–∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –±–∞–≥–æ–≤ ü™≤, –∫–æ—Ç–æ—Ä—ã–µ —Å–ª—É—á–∞–ª–∏—Å—å –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ —Ñ—É–Ω–∫—Ü–∏–∏ /heal, –≤–æ –≤—Ä–µ–º—è –º–æ–∏—Ö –ø–æ–ø—ã—Ç–æ–∫ —É–¥–∞–ª–∏—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –∞ —Ç–∞–∫–∂–µ –≤ —Å–∏—Ç—É–∞—Ü–∏—è—Ö, –∫–æ–≥–¥–∞ –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –º–æ–∂–µ—Ç –ø–æ–ª—É—á–∏—Ç—å –∫–æ –º–Ω–µ –¥–æ—Å—Ç—É–ø –∏–∑-–∑–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è —É –Ω–µ–≥–æ @–∏–º–µ–Ω–∏_–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è_–≤_tg.
                    \n\nüìñ 2. –ú–µ–Ω—è –≤—ã–Ω—É–¥–∏–ª–∏ –ø–µ—Ä–µ—á–∏—Ç–∞—Ç—å –º–µ—Ç–æ–¥–∏—á–∫—É —Å —Ç–µ—Å—Ç–∞–º–∏ {html.italic(html.strikethrough('—Å–Ω–æ–≤–∞'))}, —á—Ç–æ–±—ã –∏—Å–ø—Ä–∞–≤–∏—Ç—å {html.bold('–¥–≤–∞')} –≤–æ–ø—Ä–æ—Å–∞, –≤ –æ–¥–Ω–æ–º –∏–∑ –∫–æ—Ç–æ—Ä—ã—Ö —Å–ª–∏–ø–ª–∏—Å—å –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–∞ {html.italic(html.spoiler('(—á—Ç–æ-—Ç–æ –≤—Ä–æ–¥–µ "–∞) ...; –±) ...;")'))}, –∞ –≤ –¥—Ä—É–≥–æ–º –æ—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞–ª –≤–µ—Ä–Ω—ã–π –æ—Ç–≤–µ—Ç {html.italic(html.spoiler('(–µ–≥–æ —Ç–∞–º –≤—Å–µ –µ—â–µ –Ω–µ—Ç, –Ω–æ —Å–∫–æ—Ä–æ —ç—Ç–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—Å—è, –≤–æ–∑–º–æ–∂–Ω–æ, –¥–∞–∂–µ —Å —Ç–≤–æ–µ–π –ø–æ–º–æ—â—å—é)'))}.
                    \n\nüÜï 3. –£ –Ω–∞—Å –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ! –ù–æ–≤–∞—è {html.bold('–∫–æ–º–∞–Ω–¥–∞')} /change_hints_policy. –¢–µ–ø–µ—Ä—å —Ç—ã –º–æ–∂–µ—à—å –≤—ã–∫–ª—é—á–∏—Ç—å –ø–æ–¥—Å–∫–∞–∑–∫–∏ –≤–æ –≤—Å–µ—Ö —Ç–µ—Å—Ç–∞—Ö –∏–ª–∏ –≤–∫–ª—é—á–∏—Ç—å –∏—Ö —Å–Ω–æ–≤–∞, –¥–∞–∂–µ –≤–æ –≤—Ä–µ–º—è —Ç–µ—Å—Ç–∞! –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø–æ–¥—Å–∫–∞–∑–∫–∏ –¥–ª—è —Ç–µ–±—è –≤–∫–ª—é—á–µ–Ω—ã. –ö–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ –∏–∑ –º–µ–Ω—é. 
                    \n\nüîÑ 4. –ü–æ–¥—Å–∫–∞–∑–∫–∏ –±—ã–ª–∏ {html.bold('–ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∞–Ω—ã')}. –¢–µ–ø–µ—Ä—å –ø–æ–¥—Å–∫–∞–∑–∫–∏ –±—É–¥—É—Ç –¥–∞–≤–∞—Ç—å –Ω–µ –ø–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç, –∞ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Å–ª—É—á–∞–π–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –æ—Ç–≤–µ—Ç–∞ –∏–∑ –≤—Å–µ—Ö –≤–æ–∑–º–æ–∂–Ω—ã—Ö {html.italic(html.spoiler('(–µ—Å–ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –æ—Ç–≤–µ—Ç–æ–º —è–≤–ª—è–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–∞ "–∞–±–≤", —Ç–æ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏ —Ç—ã –ø–æ–ª—É—á–∏—à—å –ª–∏—à—å "–∞", "–±" –∏–ª–∏ "–≤")'))}.
                    \n\n–ï—Å–ª–∏ —á—Ç–æ-—Ç–æ —Å–ª–æ–º–∞–µ—Ç—Å—è, –ø–∏—à–∏ @shasoka
                    \n–ú–æ–∂–µ—à—å —Å–ø–æ–∫–æ–π–Ω–æ —É–¥–∞–ª—è—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ ü´•
                    \n–£—Å–ø–µ—Ö–æ–≤! ü§û
                    """,
                    disable_notification=False,
                    message_effect_id=random.choice(SUCCESS_EFFECT_IDS),
                )
                await changelog_seen(str(event.from_user.id))
                await asyncio.sleep(5)
        return await handler(event, data)
