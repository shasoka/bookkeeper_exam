from typing import Callable, Any, Awaitable

from aiogram import BaseMiddleware
from aiogram.types import TelegramObject

from services.service import get_user


class AuthMiddleware(BaseMiddleware):
    # noinspection PyTypeChecker
    async def __call__(
        self,
        handler: Callable[[TelegramObject, dict[str, Any]], Awaitable[Any]],
        event: TelegramObject,
        data: dict[str, Any],
    ) -> Any:

        if event.from_user:
            if not await get_user(str(event.from_user.id)):
                return await event.answer(
                    """
                    –ü–ª–∞–∫–∏-–ø–ª–∞–∫–∏? üò≠
                    \n–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π —Ç–æ–ª—å–∫–æ —Ö–ª–µ–± –≤ –º—ã—à–µ–ª–æ–≤–∫–µ, –±—Ä–∞—Ç—É—Ö–∞
                    \n–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø, –ø–∏—à–∏ —Å—é–¥–∞ ‚û°Ô∏è @shasoka
                    """,
                    disable_notification=True,
                )
                # return await event.answer(
                #     """
                #     –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ä–∞–±–æ—Ç—ã üò≠
                #     """,
                #     disable_notification=True,
                # )
            else:
                return await handler(event, data)
