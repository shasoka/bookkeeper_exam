import asyncio
import random
from typing import Callable, Any, Awaitable

from aiogram import BaseMiddleware, html
from aiogram.types import TelegramObject

from resources.strings import SUCCESS_EFFECT_IDS
from services.entities_service import get_user, changelog_seen


class ChangeLogMiddleware(BaseMiddleware):
    # noinspection PyTypeChecker
    async def __call__(
        self,
        handler: Callable[[TelegramObject, dict[str, Any]], Awaitable[Any]],
        event: TelegramObject,
        data: dict[str, Any],
    ) -> Any:

        if event.from_user:
            user = await get_user(str(event.from_user.id))
            if not user.checked_update:
                await event.answer(
                    f"""
                    {html.code('[UPDATE CHANGELOG 20.06.2024]')}
                    \n–î–ª—è —Ç–µ–±—è –Ω–∏—á–µ–≥–æ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å, –Ω–æ –∏–∑–Ω—É—Ç—Ä–∏ —è –∑–∞–º–µ—Ç–Ω–æ –ø–æ—Ö–æ—Ä–æ—à–µ–ª üíÖ
                    \n\n‚ö†Ô∏è –ü–æ—Å–ª–∞–Ω–∏–µ –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ –Ω–µ –ø–æ–ª—å–∑–æ–≤–∞–ª—Å—è –º–Ω–æ–π –Ω–µ—Å–∫–æ–ª—å–∫–æ –¥–Ω–µ–π: –¢–µ–ª–µ–≥—Ä–∞–º –Ω–µ –¥–∞—Å—Ç —É–¥–∞–ª–∏—Ç—å –º–Ω–µ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –≤–∞—à–∏ —Å—Ç–∞—Ä—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –ø–æ—ç—Ç–æ–º—É, –µ—Å–ª–∏ –ø–æ–ª—É—á–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ ‚ùåüßπ, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π /heal. 
                    \n\n–ö–∞–∫ –æ–±—ã—á–Ω–æ, –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ —Å–ª–æ–º–∞–µ—Ç—Å—è, –ø–∏—à–∏ @shasoka
                    \n–ú–æ–∂–µ—à—å —Å–ø–æ–∫–æ–π–Ω–æ —É–¥–∞–ª—è—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ ü´•
                    \n–£—Å–ø–µ—Ö–æ–≤! ü§û
                    """,
                    disable_notification=False,
                    message_effect_id=random.choice(SUCCESS_EFFECT_IDS),
                )
                await changelog_seen(str(event.from_user.id))
                await asyncio.sleep(5)
        return await handler(event, data)
